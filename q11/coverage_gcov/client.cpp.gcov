        -:    0:Source:client.cpp
        -:    0:Graph:./client.gcno
        -:    0:Data:./client.gcda
        -:    0:Runs:2
        -:    1:#include <iostream>
        -:    2:#include <unistd.h>
        -:    3:#include <arpa/inet.h>
        -:    4:#include <cstring>
        -:    5:
        -:    6:using namespace std;
        -:    7:
function main called 2 returned 100% blocks executed 67%
        2:    8:int main() {
        2:    9:    int sock = 0;
        -:   10:    sockaddr_in serv_addr;
        -:   11:
        -:   12:    // יצירת socket
        2:   13:    sock = socket(AF_INET, SOCK_STREAM, 0);
call    0 returned 100%
        2:   14:    if (sock < 0) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   15:        perror("socket failed");
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
       1*:   16:        return 1;
        -:   17:    }
        -:   18:
        2:   19:    serv_addr.sin_family = AF_INET;
        2:   20:    serv_addr.sin_port = htons(8080); 
        -:   21:
        -:   22:    // המרה של כתובת IP
        2:   23:    if (inet_pton(AF_INET, "127.0.0.1", &serv_addr.sin_addr) <= 0) {
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:   24:        perror("Invalid address");
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   25:        return 1;
        -:   26:    }
        -:   27:
        -:   28:    // התחברות לשרת
        2:   29:    if (connect(sock, (sockaddr*)&serv_addr, sizeof(serv_addr)) < 0) {
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
branch  3 taken 50% (fallthrough)
branch  4 taken 50%
        1:   30:        perror("Connection failed");
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   31:        return 1;
        -:   32:    }
        -:   33:    
        1:   34:        string v;
call    0 returned 100%
        1:   35:        string e;
call    0 returned 100%
        1:   36:        string r;
call    0 returned 100%
        1:   37:        cout << " let's make a new graph "<< endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        1:   38:        cout << " please enter number of vertex: "<< endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        1:   39:        cin >> v;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   40:        cout << " please enter number of edges: "<< endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        1:   41:        cin >> e;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   42:        cout << " please enter the number of the root vertex: : "<< endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        1:   43:        cin >> r;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   44:        
        -:   45:       
        -:   46:
        -:   47:    
        1:   48:        string commend;
call    0 returned 100%
        1:   49:        commend = v +","+ e + "," + r;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
call   12 returned 100%
call   13 returned 100%
call   14 returned 100%
call   15 returned 100%
call   16 returned 100%
call   17 never executed
call   18 never executed
call   19 never executed
        -:   50:
        1:   51:        send(sock, commend.c_str(), commend.size(), 0);
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0% (throw)
        -:   52:
        -:   53:        // int ans1;
        -:   54:        // while(1){
        -:   55:
        -:   56:        
        -:   57:        // cout<<"MENUE:"<<endl;
        -:   58:        // cout << "1. caculate Euler circle: "<< endl;
        -:   59:        // cout << "2. caculate max flow: "<< endl;
        -:   60:        // cout << "3. caculate count cliques: "<< endl;
        -:   61:        // cout << "4. find Max clique: "<< endl;
        -:   62:        // cout << "5. minimum spanning tree: "<< endl;
        -:   63:        // cin >> ans1;
        -:   64:        
        -:   65:        // string ans;
        -:   66:
        -:   67:        // if(ans1==1){ans="Euler circle";}
        -:   68:        // if(ans1==2){ans="max flow";}
        -:   69:        // if(ans1==3){ans="count cliques";}
        -:   70:        // if(ans1==4){ans="find Max clique";}
        -:   71:        // if(ans1==5){ans="MST";}
        -:   72:        // send(sock, ans.c_str(), ans.size(), 0);
        -:   73:
        -:   74:        char buffer[1024];
        -:   75:        int recv_len;
        1:   76:        if((recv_len = recv(sock, buffer, sizeof(buffer), 0)) == -1) {
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
    #####:   77:        cerr << "you cant recev masseges from the server" << endl;
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    #####:   78:        return -1;
        -:   79:    }
        -:   80:
        1:   81:    buffer[recv_len] = '\0';  // סיום המיתר עם NULL
        1:   82:    cout << "the massege from the server:\n " << buffer << endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
        2:   83:}
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0%
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0%
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0%
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
        -:   84:// }
